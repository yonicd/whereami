% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/counter.R
\name{counter_state}
\alias{counter_state}
\alias{counter_reset}
\alias{counter_names}
\alias{counter_tags}
\alias{counter_get}
\title{whereami counter}
\usage{
counter_state(item = NULL, tag = NULL)

counter_reset(item = NULL, tag = NULL)

counter_names()

counter_tags()

counter_get()
}
\arguments{
\item{item}{character, name of the counter to access, Default: NULL}

\item{tag}{character, tag of the counter to acces, if it was set at initial whereami call.
This can be used instead of the item name, Default: NULL}
}
\description{
Interact with internal whereami counter
}
\details{
\code{counter_names()} returns names of the active stored counters.

\code{counter_state()} returns current hit count for item, if NULL then all counters
are returned.

\code{counter_reset()} will remove counter of item, if item is NULL then all counters
are reset.

\code{counter_get()} returns a table with all the counters. These can then
be plotted with the \code{autoplot()} method.
}
\examples{

if( interactive() ){

tf <- tempfile(fileext = '.R')

# call to write to temp file
f <- "whereami::cat_where(whereami::whereami(tag = 'my tag'))"

# write to the file (call at line 3)
cat('\\n\\n',f,sep='',file = tf)

source(tf)

counter_state()

counter_state(tag = 'my tag')

counter_names()

# using counter_reset and counter_names in a loop

for( i in 1:10 ){

  source(tf)

  if( counter_state(counter_names()[1]) > 5 )
    counter_reset(counter_names()[1])
}

# clear all counters
counter_reset()

# cleanup
unlink(tf)

}

}
\author{
Jonathan Sidi
}
\concept{counter}
